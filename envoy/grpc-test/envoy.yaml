---

admin:
  access_log_path: /dev/null
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15000

static_resources:
  clusters:
    - name: authority
      connect_timeout: 1s
      type: LOGICAL_DNS
      load_assignment:
        cluster_name: authority
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: authority
                      port_value: 8080
    - name: upstream
      connect_timeout: 1s
      type: LOGICAL_DNS
      http2_protocol_options: {}
      load_assignment:
        cluster_name: upstream
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: grpc-web-server
                      port_value: 9000
  listeners:
    - name: grpc
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 10000
      filter_chains:
        - filters:
            - name: envoy.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.config.filter.network.http_connection_manager.v2.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: grpc
                  virtual_hosts:
                    - name: upstream
                      domains:
                        - '*'
                      routes:
                        - name: upstream
                          route:
                            cluster: upstream
                          match:
                            prefix: "/"
                access_log:
                  - name: envoy.file_access_log
                    config:
                      path: /dev/stdout
                      json_format:
                        protocol: '%PROTOCOL%'
                        method: '%REQ(:METHOD)%'
                        response_code: '%RESPONSE_CODE%'
                        response_code_details: '%RESPONSE_CODE_DETAILS%'
                        resopnse_flags: '%RESPONSE_FLAGS%'
                        upstream_host: '%UPSTREAM_HOST%'
                        upstream_cluster: '%UPSTREAM_CLUSTER%'
                        hostname: '%HOSTNAME%'
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    config:
                      providers:
                        authority:
                          issuer: authority.authority.svc.cluster.local
                          remote_jwks:
                            http_uri:
                              uri: http://authority:8080/jwks
                              cluster: authority
                              timeout: 1s
                            cache_duration:
                              seconds: 300
                          payload_in_metadata: jwt_payload
                      rules:
                        - match:
                            prefix: /
                          requires:
                            provider_name: authority
                  - name: envoy.lua
                    typed_config:
                      "@type": type.googleapis.com/envoy.config.filter.http.lua.v2.Lua
                      inline_code: |
                        function envoy_on_request(request_handle)
                          local meta = request_handle:streamInfo():dynamicMetadata()
                          for key, value in pairs(meta) do
                            request_handle:logInfo("extract dynamicMetadata key: "..key)
                            request_handle:logInfo("extract dynamicMetadata value: "..value.jwt_payload.foo)
                          end
                        end
                  - name: envoy.router
