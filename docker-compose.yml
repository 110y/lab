---
version: "3.7"

services:
  go:
    build:
      context: ./containers/go
    working_dir: /usr/local/src/lab
    volumes:
      - ./:/usr/local/src/lab:cached
    environment:
      CONTAINER_REGISTRY: ${CONTAINER_REGISTRY}

  protoc:
    build:
      context: ./containers/protoc
    working_dir: /usr/local/src/lab
    volumes:
      - ./:/usr/local/src/lab:cached

  go-control-plane:
    build:
      context: ./containers/go
    working_dir: /usr/local/src/lab
    volumes:
      - ./:/usr/local/src/lab:cached
    ports:
      - ${GO_CONTROL_PLANE_PORT}:8081
    command: go run ./go/control_plane

  envoy-data-plane:
    image: envoyproxy/envoy:v1.12.2
    volumes:
      - ./envoy/control-plane/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - ${ENVOY_DATA_PLANE_ADMIN_PORT}:15000

  emscripten:
    build:
      context: ./cc/emscripten
    working_dir: /usr/local/src/lab
    volumes:
      - ./:/usr/local/src/lab:cached

  grpc-test-envoy:
    image: envoyproxy/envoy:v1.14.1
    ports:
      - ${GRPC_TEST_ENVOY_PORT}:10000
      - ${GRPC_TEST_ENVOY_ADMIN_PORT}:15000
    volumes:
      - ./envoy/grpc-test/envoy.yaml:/etc/envoy/envoy.yaml

  grpc-web-envoy:
    image: envoyproxy/envoy:v1.12.0
    ports:
      - ${GRPC_WEB_ENVOY_PORT}:10000
    volumes:
      - ./grpc-web/envoy.yaml:/etc/envoy/envoy.yaml

  grpc-web-server:
    image: golang:1.13.3-alpine3.10
    ports:
      - ${GRPC_WEB_SERVER_PORT}:9000
    volumes:
      - ./:/usr/local/src/workspace
    working_dir: /usr/local/src/workspace/
    command: go run ./grpc-web/server

  elasticsearch:
    image: elasticsearch:7.3.2
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - ${ELASTICSEARCH_PORT}:9200

  envoy-filter-example:
    image: envoyproxy/envoy:v1.12.0
    volumes:
      - ./bin/envoy-filter-example:/usr/local/bin/envoy
      - ./envoy/filter/example/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - ${ENVOY_FILTER_EXAMPLE_PORT}:10000

  envoy-filter-hello:
    image: envoyproxy/envoy:v1.12.0
    volumes:
      - ./bin/envoy-filter-hello:/usr/local/bin/envoy
      - ./envoy/filter/example/envoy.yaml:/etc/envoy/envoy.yaml
    ports:
      - ${ENVOY_FILTER_HELLO_PORT}:10000

  envoy-wasm:
    build:
      context: ./envoy/filter/wasm-rust
    volumes:
      - ./envoy/filter/wasm-rust/envoy.yaml:/etc/envoy/envoy.yaml
      - ./envoy/filter/wasm-rust/target/wasm32-unknown-unknown/release/wasm_rust.wasm:/etc/envoy/filter.wasm
    ports:
      - ${ENVOY_WASM_PORT}:10000

  envoy-filter-wasm:
    image: envoyproxy/envoy:v1.13.1
    volumes:
      - ./bin/envoy-wasm:/usr/local/bin/envoy
      - ./envoy/filter/wasm/envoy.yaml:/etc/envoy/envoy.yaml
      # - ./envoy/filter/wasm/filter.wasm:/etc/envoy/filter.wasm
      # - ./_third_party/envoy-wasm/examples/wasm/envoy_filter_http_wasm_example.wasm:/etc/envoy/filter.wasm
      - ./wasm/proxy-wasm/hello/myproject.wasm:/etc/envoy/filter.wasm
    ports:
      - ${ENVOY_FILTER_WASM_PORT}:10000

  envoy-upstream:
    build:
      context: ./envoy/upstream
    ports:
      - ${ENVOY_UPSTREAM_PORT}:8080

  envoy-builder:
    build:
      context: ./containers/envoy-builder
    working_dir: /usr/local/src/workspace/
    volumes:
      - ./:/usr/local/src/workspace:cached
      - ${HOME}/.config/gcloud/application_default_credentials.json:/etc/google_application_default_credentials.json

  authority:
    build:
      context: ./
      dockerfile: ./envoy/authority/Dockerfile
    ports:
      - ${AUTHORITY_PORT}:8080
